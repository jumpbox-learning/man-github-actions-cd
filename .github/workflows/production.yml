name: Production pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: kubeops-ng-app
  REPO_OWNER_LOWERCASE: 'kubesuperops'
  REGISTRY: 'kubesuperops.azurecr.io'

jobs:

  ci:
    name: Continuous Integration
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Login acr
        uses: docker/login-action@v1
        if: endsWith(github.ref, '/develop') || endsWith(github.ref, '/staging') || endsWith(github.ref, '/master')
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.10
        with:
          versionSpec: '5.x'

      - name: Execute GitVersion
        uses: gittools/actions/gitversion/execute@v0.9.10
        with:
          useConfigFile: true
          targetPath: ./kubeops-ng
          configFilePath: ./kubeops-ng/GitVersion.yml

      - name: Display SemVer
        run: |
          echo "SemVer: $GITVERSION_SEMVER"

      - name: Build and push to registry
        run: |
          cd kubeops-ng
          docker build -t ${{ env.REGISTRY }}/${{ env.REPO_OWNER_LOWERCASE }}/${{ env.IMAGE_NAME }}:$GITVERSION_SEMVER \
                       -t ${{ env.REGISTRY }}/${{ env.REPO_OWNER_LOWERCASE }}/${{ env.IMAGE_NAME }}:latest \
                       --build-arg build_env=${{ env.ENVIRONMENT }} .
          docker push -a ${{ env.REGISTRY }}/${{ env.REPO_OWNER_LOWERCASE }}/${{ env.IMAGE_NAME }}

      - name: Update deployment manifests
        run: |
          cd manifests/deployments
          yq -i '.spec.template.spec.containers[0].image = "${{ env.REGISTRY }}/${{ env.REPO_OWNER_LOWERCASE }}/${{ env.IMAGE_NAME }}:$GITVERSION_SEMVER"' deployment.yaml

